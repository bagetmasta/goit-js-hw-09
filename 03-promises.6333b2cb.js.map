{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,UAG/B,IAAIC,EAAmB,EACnBC,EAAW,EAEfL,EAAKC,KAAKK,iBAAiB,UAE3B,SAAuBC,GACrBA,EAAEC,iBAEF,MACEC,UAAUC,OAAEA,EAAQC,MAAAC,EAAKC,KAAEA,IACzBN,EAAEO,cAEN,IAAIC,EAAmBC,OAAOJ,EAAMK,OAEpC,MAAMC,EAAaC,aAAY,KAC7B,GAAIf,EAAmBY,OAAON,EAAOO,OAInC,OAHAb,EAAmB,EACnBC,EAAW,OACXe,cAAcF,GAsBpB,IAAuBG,EAAUV,GAAVU,EAlBLhB,EAkBeM,EAlBLI,EAmBnB,IAAIO,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAGpCJ,EAAQ,CACNK,SAAUP,EACVV,MAAOA,IAITa,EAAO,CACLI,SAAUP,EACVV,MAAOA,MAGVA,OAlCAkB,MAAK,EAAGD,SAAAE,EAAQnB,MAAEA,MACjBoB,EAAAjC,GAASkC,OAAOC,QACd,uBAAqBH,QAAiBnB,UAGzCuB,OAAM,EAAGN,SAAAO,EAAQxB,MAAEA,MAClBoB,EAAAjC,GAASkC,OAAOI,QACd,sBAAoBD,QAAexB,UAIzCP,GAAoB,EACpBC,GAAY,EACZU,GAAoBC,OAAOH,EAAKI","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n};\n\nlet amountOfPromises = 1;\nlet position = 1;\n\nrefs.form.addEventListener('submit', onSubmitClick);\n\nfunction onSubmitClick(e) {\n  e.preventDefault();\n\n  const {\n    elements: { amount, delay, step },\n  } = e.currentTarget;\n\n  let delayForFunction = Number(delay.value);\n\n  const intervalId = setInterval(() => {\n    if (amountOfPromises > Number(amount.value)) {\n      amountOfPromises = 1;\n      position = 1;\n      clearInterval(intervalId);\n      return;\n    }\n\n    createPromise(position, delayForFunction)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n\n    amountOfPromises += 1;\n    position += 1;\n    delayForFunction += Number(step.value);\n  });\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        // Fulfill\n        resolve({\n          position: position,\n          delay: delay,\n        });\n      } else {\n        // Reject\n        reject({\n          position: position,\n          delay: delay,\n        });\n      }\n    }, delay);\n  });\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","$47d4ff9957288465$var$amountOfPromises","$47d4ff9957288465$var$position","addEventListener","e","preventDefault","elements","amount","delay","delay1","step","currentTarget","delayForFunction","Number","value","intervalId","setInterval","clearInterval","position3","Promise","resolve","reject","setTimeout","Math","random","position","then","position1","$parcel$interopDefault","Notify","success","catch","position2","failure"],"version":3,"file":"03-promises.6333b2cb.js.map"}